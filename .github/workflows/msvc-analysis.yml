# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Find more information at:
# https://github.com/microsoft/msvc-code-analysis-action

name: Microsoft C++ Code Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "43 11 * * 4"

env:
  # Path to the CMake build directory.
  BUILD_TYPE: Release
  BUILD_MSVC_PRESET: msvc_analysis
  build: "${{ github.workspace }}/build"

jobs:
  analyze:
    name: Analyze
    runs-on: windows-2019

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Configure CMake
        run: |
          cmake --list-presets
          cmake --preset=${{env.BUILD_MSVC_PRESET}} -B ${{ env.build }}

      # NOTE, We need to build since generated header files are used
      - name: Build CMake
        run: cmake --build ${{ env.build }} --config ${{ env.BUILD_TYPE }}

      - name: Initialize MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@main
        # Provide a unique ID to access the sarif output path
        id: run-analysis
        with:
          cmakeBuildDirectory: ${{ env.build }}
          buildConfiguration: ${{ env.BUILD_TYPE }}
          # Ruleset file that will determine what checks will be run
          ruleset: NativeRecommendedRules.ruleset
          ignoredPaths: third_party;build/buildcc/schema/generated

      # Upload SARIF file to GitHub Code Scanning Alerts
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.run-analysis.outputs.sarif }}

      # Upload SARIF file as an Artifact to download and view
      - name: Upload SARIF as an Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sarif-file
          path: ${{ steps.run-analysis.outputs.sarif }}
